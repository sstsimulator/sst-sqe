---
name: run bamboo

# yamllint disable-line rule:truthy
on:
  workflow_call:
  workflow_dispatch:

concurrency:
  group: test-${{github.ref}}-${{github.event.pull_request.number || github.run_number}}
  cancel-in-progress: true

jobs:
  run-bamboo:
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-14
          - ubuntu-24.04
        bamboo-call-line:
          - build-type: sstmainline_config
            mpi-type: none
            compiler-type: none
          - build-type: sstmainline_coreonly_config
            mpi-type: none
            compiler-type: none
          - build-type: sstmainline_config_no_mpi
            mpi-type: none
            compiler-type: none
          - build-type: sstmainline_coreonly_config_no_mpi
            mpi-type: none
            compiler-type: none
          - build-type: sstmainline_config_make_dist_test
            mpi-type: none
            compiler-type: none
          - build-type: sstmainline_config_core_make_dist_test
            mpi-type: none
            compiler-type: none
        exclude:
          - os: macos-14
            bamboo-call-line: {build-type: sstmainline_config}
          - os: macos-14
            bamboo-call-line: {build-type: sstmainline_coreonly_config}
          - os: macos-14
            bamboo-call-line: {build-type: sstmainline_config_make_dist_test}
          - os: macos-14
            bamboo-call-line: {build-type: sstmainline_config_core_make_dist_test}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4
        with:
          persist-credentials: false
      - name: install system-level dependencies (macOS)
        run: |
          brew install \
              autoconf \
              automake \
              coreutils \
              doxygen \
              libtool \
              lmod \
              ncurses \
              pygments
          python -m pip install blessings
          # echo "source /opt/homebrew/opt/lmod/init/profile" >> ~/.bashrc
        if: matrix.os == 'macos-14'
      - name: install system-level dependencies (Ubuntu)
        run: |
          export DEBIAN_FRONTEND=noninteractive
          sudo apt-get -y update
          sudo apt-get -y install \
              autoconf \
              automake \
              doxygen \
              libopenmpi-dev \
              libtool-bin \
              lmod \
              python3-blessings \
              python3-pygments
          # echo "source /usr/share/lmod/lmod/init/bash" >> ~/.bashrc
        if: matrix.os == 'ubuntu-24.04'
      - name: ccache
        uses: hendrikmuhs/ccache-action@a1209f81afb8c005c13b4296c32e363431bffea5  # v1.2
        with:
          create-symlink: true
          key: >-
            ccache-${{ matrix.os }}
            -${{ matrix.bamboo-call-line.build-type }}
            -${{ matrix.bamboo-call-line.mpi-type }}
            -${{ matrix.bamboo-call-line.compiler-type }}
          verbose: 2
      - name: set env and prepare dir structure
        run: |
          # Keep this common in order to increase ccache effectiveness
          # sst_deps_user_dir="${GITHUB_WORKSPACE}/../${GITHUB_RUN_ID}_${GITHUB_RUN_NUMBER}_${GITHUB_RUN_ATTEMPT}"
          sst_deps_user_dir="${GITHUB_WORKSPACE}/../sst-deps-user-dir"
          mkdir -p "${sst_deps_user_dir}"
          SST_DEPS_USER_DIR="$(realpath "${sst_deps_user_dir}")"
          echo "SST_DEPS_USER_DIR=${SST_DEPS_USER_DIR}" >> "${GITHUB_ENV}"
      - name: fetch elements dependencies
        run: |
          pristine="${SST_DEPS_USER_DIR}"/sstDeps/src/pristine
          mkdir -p "${pristine}"
          cd "${pristine}"
          wget https://github.com/umd-memsys/DRAMSim2/archive/refs/tags/v2.2.2.tar.gz
      - name: run bamboo
        env:
          COMPILER_TYPE: ${{ matrix.bamboo-call-line.compiler-type }}
        run: |
          # needed for ncurses part of interactive sst-info
          export TERM=dumb
          MAKEFLAGS="-j$(nproc)"
          export MAKEFLAGS
          if [[ "$(uname)" == "Darwin" ]]; then
              export PMIX_MCA_gds=hash
          fi
          export SST_DEPS_USER_MODE=1
          mkdir -p "${SST_DEPS_USER_DIR}/devel/trunk"
          mv "${GITHUB_WORKSPACE}" "${SST_DEPS_USER_DIR}/devel/sqe"
          cd "${SST_DEPS_USER_DIR}/devel/trunk"
          if [[ "${COMPILER_TYPE}" != "none" ]]; then
              if [[ "${COMPILER_TYPE}" == "clang" ]]; then
                  CC="$(command -v clang)"
                  CXX="$(command -v clang++)"
              fi
              export CC
              export CXX
          fi
          ../sqe/buildsys/bamboo.sh \
              ${{ matrix.bamboo-call-line.build-type }} \
              ${{ matrix.bamboo-call-line.mpi-type }} \
              none \
              "${COMPILER_TYPE}" \
              none \
              none
          ccache -s -vv
      - uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1  # v4
        with:
          name: >-
            test-output-${{ matrix.os }}
            -${{ matrix.bamboo-call-line.build-type }}
            -${{ matrix.bamboo-call-line.mpi-type }}
            -${{ matrix.bamboo-call-line.compiler-type }}
          path: sst_test_outputs
          compression-level: 9
        if: '!cancelled()'
