---
name: run bamboo

# yamllint disable-line rule:truthy
on:
  workflow_call:
  workflow_dispatch:

concurrency:
  group: test-${{github.ref}}-${{github.event.pull_request.number || github.run_number}}
  cancel-in-progress: true

jobs:
  run-bamboo:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-14
            bamboo-call-line:
              build-type: sstmainline_coreonly_config
              compiler-type: none
              mpi-type: none
          - os: macos-14
            bamboo-call-line:
              build-type: sstmainline_config_no_mpi
              compiler-type: none
              mpi-type: none
          - os: ubuntu-22.04
            bamboo-call-line:
              build-type: sstmainline_config
              compiler-type: none
              mpi-type: none
          - os: ubuntu-24.04
            bamboo-call-line:
              build-type: sstmainline_config
              compiler-type: none
              mpi-type: none
          - os: ubuntu-24.04
            bamboo-call-line:
              build-type: sstmainline_coreonly_config
              compiler-type: none
              mpi-type: none
          - os: ubuntu-24.04
            bamboo-call-line:
              build-type: sstmainline_config_no_mpi
              compiler-type: none
              mpi-type: none
          - os: ubuntu-24.04
            bamboo-call-line:
              build-type: sstmainline_coreonly_config_no_mpi
              compiler-type: none
              mpi-type: none
          - os: ubuntu-24.04
            bamboo-call-line:
              build-type: sstmainline_config_make_dist_test
              compiler-type: none
              mpi-type: none
          - os: ubuntu-24.04
            bamboo-call-line:
              build-type: sstmainline_config_core_make_dist_test
              compiler-type: none
              mpi-type: none
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4
        with:
          persist-credentials: false
      - name: install system-level dependencies
        run: |
          bash ./.github/scripts/install_os_level_dependencies.sh
      - name: ccache
        uses: hendrikmuhs/ccache-action@63069e3931dedbf3b63792097479563182fe70d1  # v1.2
        with:
          create-symlink: true
          key: >-
            ccache-${{ matrix.os }}
            -${{ matrix.bamboo-call-line.build-type }}
            -${{ matrix.bamboo-call-line.mpi-type }}
            -${{ matrix.bamboo-call-line.compiler-type }}
          verbose: 2
      - name: Clone Spack
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4
        with:
          persist-credentials: false
          # Take the latest (develop) version.
          repository: spack/spack
          ref: develop
          path: spack
      - name: Add Spack to PATH
        run: |
          echo "${PWD}/spack/bin" >> "${GITHUB_PATH}"
          # echo "mirror_name=github-container-registry" >> "${GITHUB_ENV}"
      - name: Find compilers for Spack
        run: |
          spack compiler find
          spack config blame config
          spack debug report
      - name: try module stuff
        shell: /bin/bash -el {0}
        run: |
          module avail
      - name: set env and prepare dir structure
        run: |
          # Keep this common in order to increase ccache effectiveness
          # sst_deps_user_dir="${GITHUB_WORKSPACE}/../${GITHUB_RUN_ID}_${GITHUB_RUN_NUMBER}_${GITHUB_RUN_ATTEMPT}"
          sst_deps_user_dir="${GITHUB_WORKSPACE}/../sst-deps-user-dir"
          mkdir -p "${sst_deps_user_dir}"
          SST_DEPS_USER_DIR="$(realpath "${sst_deps_user_dir}")"
          echo "SST_DEPS_USER_DIR=${SST_DEPS_USER_DIR}" >> "${GITHUB_ENV}"
      - name: fetch elements dependencies
        run: |
          pristine="${SST_DEPS_USER_DIR}"/sstDeps/src/pristine
          mkdir -p "${pristine}"
          cd "${pristine}"
          wget https://github.com/umd-memsys/DRAMSim2/archive/refs/tags/v2.2.2.tar.gz
      - name: run bamboo
        env:
          BUILD_TYPE: ${{ matrix.bamboo-call-line.build-type }}
          COMPILER_TYPE: ${{ matrix.bamboo-call-line.compiler-type }}
          MPI_TYPE: ${{ matrix.bamboo-call-line.mpi-type }}
        run: |
          bash ./.github/scripts/call_bamboo.sh
          ccache -s -vv
      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02  # v4
        with:
          name: >-
            test-output-${{ matrix.os }}
            -${{ matrix.bamboo-call-line.build-type }}
            -${{ matrix.bamboo-call-line.mpi-type }}
            -${{ matrix.bamboo-call-line.compiler-type }}
          path: sst_test_outputs
          compression-level: 9
        if: '!cancelled()'
